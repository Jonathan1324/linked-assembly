config:
  default_env: general
  default_targets:
  - lib
  - exe

formats:
  gcc_deps:
    start:
      ignore_lines: 2
      trim:
        if: "  "
        remove: 2
    end:
      ignore_lines: 0
      trim:
        if: "\\"
        remove: 1

toolchains:
  main:
    tools:
      CC:
        type: compiler
        when:
          ext:
          - c
          type: source
          out: object
        dep_path: ${ OUTPUT }.d
        dep_format: gcc_deps
        command: gcc -c ${ INPUT } -MMD -MF ${ OUTPUT }.d -o ${ OUTPUT }
        message: Compiling ${ NAME }.${ EXT }
      CXX:
        type: compiler
        when:
          ext:
          - cpp
          - cxx
          - c++
          type: source
          out: object
        dep_path: ${ OUTPUT }.d
        dep_format: gcc_deps
        command: g++ -c ${ INPUT } -MMD -MF ${ OUTPUT }.d -o ${ OUTPUT }
        message: Compiling ${ NAME }.${ EXT }
      
      LD:
        type: linker
        when:
          type: object
          out: executable
        combine_inputs: true
        command: g++ ${ INPUT } ${ LIBRARIES } -o ${ OUTPUT }
        message: Linking ${ ONAME }

      AR:
        type: linker
        when:
          type: object
          out: static-library
        combine_inputs: true
        command: ar rcs ${ OUTPUT } ${ INPUT }
        message: Creating static library ${ ONAME }

environments:
  general:
    toolchain: main
    build_dir: build
    vars:
      SRC_DIR: src
        
  lib:
    toolchain: main
    build_dir: ${ env.build_dir }/lib
    vars:
      SRC_DIR: src/lib
  exe:
    toolchain: main
    build_dir: ${ env.build_dir }/exe
    vars:
      SRC_DIR: src/exe

targets:
  lib:
    path: ${ $env.SRC_DIR }
    config: build.yaml
    outputs:
      lib:
        type: static-library
    env: lib
  exe:
    path: ${ $env.SRC_DIR }
    config: build.yaml
    depends:
    - lib
    outputs:
      main:
        type: executable
    env: exe
