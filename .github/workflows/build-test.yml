name: build-test

on:
  workflow_dispatch:
    inputs:
      ubuntu_x86_64:
        description: "Build for Ubuntu x86_64"
        required: false
        default: 'false'
      ubuntu_arm:
        description: "Build for Ubuntu arm"
        required: false
        default: 'false'
      windows_x86_64:
        description: "Build for Windows x86_64"
        required: false
        default: 'false'
      windows_arm:
        description: "Build for Windows arm"
        required: false
        default: 'false'
      macos_x86_64:
        description: "Build for macOS x86_64"
        required: false
        default: 'false'
      macos_arm:
        description: "Build for macOS arm"
        required: false
        default: 'false'

jobs:
  planner:
    name: Determine matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      should_run: ${{ steps.set-matrix.outputs.should_run }}
    steps:
      - id: set-matrix
        run: |
          MATRIX='{"include":['
          COUNT=0

          if [[ "${{ github.event.inputs.ubuntu_x86_64 }}" == "true" ]]; then
            MATRIX+='{"os":"ubuntu-24.04","arch":"x86_64","os_name":"linux"},'
            COUNT=$((COUNT+1))
          fi
          if [[ "${{ github.event.inputs.ubuntu_arm }}" == "true" ]]; then
            MATRIX+='{"os":"ubuntu-24.04-arm","arch":"arm64","os_name":"linux"},'
            COUNT=$((COUNT+1))
          fi
          if [[ "${{ github.event.inputs.windows_x86_64 }}" == "true" ]]; then
            MATRIX+='{"os":"windows-2025","arch":"x86_64","os_name":"windows"},'
            COUNT=$((COUNT+1))
          fi
          if [[ "${{ github.event.inputs.windows_arm }}" == "true" ]]; then
            MATRIX+='{"os":"windows-11-arm","arch":"arm64","os_name":"windows"},'
            COUNT=$((COUNT+1))
          fi
          if [[ "${{ github.event.inputs.macos_x86_64 }}" == "true" ]]; then
            MATRIX+='{"os":"macos-13","arch":"x86_64","os_name":"macos"},'
            COUNT=$((COUNT+1))
          fi
          if [[ "${{ github.event.inputs.macos_arm }}" == "true" ]]; then
            MATRIX+='{"os":"macos-15","arch":"arm64","os_name":"macos"},'
            COUNT=$((COUNT+1))
          fi

          if [ $COUNT -eq 0 ]; then
            # dummy
            MATRIX+='{"os":"ubuntu-latest","arch":"x86_64","os_name":"skip","skip":"true"}'
            SHOULD_RUN=false
          else
            # remove last comma
            MATRIX="${MATRIX%,}"
            SHOULD_RUN=true
          fi

          MATRIX+=']}'

          echo "Matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "should_run=$SHOULD_RUN" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: planner

    strategy:
      matrix: ${{ fromJson(needs.planner.outputs.matrix) }}
  
    runs-on: ${{ matrix.os }}

    if: ${{ needs.planner.outputs.should_run == 'true' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          if [ "${{ matrix.os_name }}" = "windows" ]; then
            python scripts/install_build_deps.py
          else
            python3 scripts/install_build_deps.py
          fi
        shell: bash

      - name: Build the project
        run: |
          if [ "${{ matrix.os_name }}" = "windows" ]; then
            python -m ci.ci --no-test -a -A linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}
          else
            python -m ci.ci --no-test -a -A linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}
          fi
        shell: bash

      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}
          path: dist/

      - name: Upload logs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}-logs
          path: logs/
