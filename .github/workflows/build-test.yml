name: build-test

on:
  workflow_dispatch:
    inputs:
      ubuntu_x86_64:
        description: "Build for Ubuntu x86_64"
        required: false
        default: 'false'
      ubuntu_arm:
        description: "Build for Ubuntu arm"
        required: false
        default: 'false'
      windows_x86_64:
        description: "Build for Windows x86_64"
        required: false
        default: 'false'
      windows_arm:
        description: "Build for Windows arm"
        required: false
        default: 'false'
      macos_x86_64:
        description: "Build for macOS x86_64"
        required: false
        default: 'false'
      macos_arm:
        description: "Build for macOS arm"
        required: false
        default: 'false'

permissions:
  actions: 'write'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: x86_64
            os_name: linux
            input: ubuntu_x86_64
          - os: ubuntu-24.04-arm
            arch: arm64
            os_name: linux
            input: ubuntu_arm
          - os: windows-2025
            arch: x86_64
            os_name: windows
            input: windows_x86_64
          - os: windows-11-arm
            arch: arm64
            os_name: windows
            input: windows_arm
          - os: macos-13
            arch: x86_64
            os_name: macos
            input: macos_x86_64
          - os: macos-15
            arch: arm64
            os_name: macos
            input: macos_arm
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Skip job if not selected
        if: ${{ github.event.inputs[matrix.input] != 'true' }}
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          if [ "${{ matrix.os_name }}" = "windows" ]; then
            python scripts/install_build_deps.py
          else
            python3 scripts/install_build_deps.py
          fi
        shell: bash

      - name: Build the project
        run: |
          if [ "${{ matrix.os_name }}" = "windows" ]; then
            python -m ci.ci --no-test -a -A linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}
          else
            python -m ci.ci --no-test -a -A linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}
          fi
        shell: bash

      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}
          path: dist/

      - name: Upload logs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}-logs
          path: logs/
