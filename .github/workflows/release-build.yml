name: release-build

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: x86_64
            os_name: linux
          - os: ubuntu-24.04-arm
            arch: arm64
            os_name: linux
          - os: windows-2025
            arch: x86_64
            os_name: windows
          - os: windows-11-arm
            arch: arm64
            os_name: windows
          - os: macos-13
            arch: x86_64
            os_name: macos
          - os: macos-15
            arch: arm64
            os_name: macos
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build tools (Linux)
        if: matrix.os_name == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential nasm

      - name: Install build tools (Windows)
        if: matrix.os_name == 'windows'
        run: choco install make nasm 7zip -y

      - name: Install build tools (macOS)
        if: matrix.os_name == 'macos'
        run: brew install make nasm

      - name: Build the project
        run: make VERSION=${{ github.event.release.tag_name }}
        shell: bash

      - name: Move binaries
        run: |
          mkdir -p binaries
          EXT=""
          if [[ "${{ matrix.os_name }}" == "windows" ]]; then
            EXT=".exe"
          fi
          cp build/assembly/assembly$EXT binaries/assembly$EXT
          cp build/linker/linker$EXT binaries/linker$EXT
        shell: bash

      - name: Archive binaries
        run: |
          cd binaries
          if [[ "${{ matrix.os_name }}" == "windows" ]]; then
            7z a ../linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}.7z assembly.exe linker.exe
          else
            tar -czf ../linked-assembly-${{ matrix.os_name }}-${{ matrix.arch }}.tar.gz assembly linker
          fi
          cd ..
        shell: bash

      - name: Upload archive as release asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ matrix.os_name == 'windows' && format('linked-assembly-{0}-{1}.zip', matrix.os_name, matrix.arch) || format('linked-assembly-{0}-{1}.tar.gz', matrix.os_name, matrix.arch) }}
          token: ${{ secrets.GITHUB_TOKEN }}